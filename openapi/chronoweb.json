{
  "openapi": "3.1.0",
  "info": {
    "title": "Chronoweb - OpenAPI 3.1",
    "description": "This is the API description of Chronoweb based on the OpenAPI 3.1 specification.  Chronoweb is an open-source web information system that analyzes temporal information diffusion with a unified RESTful web service. Users are able to create, retrieve, update, delete, and traverse graph elements such as vertices, edges, vertex events and edge events. Furthermore, the server allows subscribing a specific vertex source with an incremental computation program. \n\nRelated Article:\n- [Kairos, IEEE TKDE](https://ieeexplore.ieee.org/abstract/document/10374549)\n- [Time-centric engine, IEEE TKDE](https://ieeexplore.ieee.org/abstract/document/9128046)\n- [ChronoGraph, IEEE TKDE](https://ieeexplore.ieee.org/abstract/document/8606161/)",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "jwbyun@sejong.ac.kr"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://dfpl.sejong.ac.kr/chronoweb"
    }
  ],
  "tags": "",
  "paths": {
    "/graph/{vertexID}": {
      "put": {
        "tags": [
          "vertex"
        ],
        "summary": "Creates or updates a vertex with a given 'vertexID'",
        "description": "Create or updates a vertex with a given 'vertexID'.",
        "parameters": [
          {
            "name": "vertexID",
            "in": "path",
            "required": true,
            "description": "A vertex identifier that is unique in a graph",
            "schema": {
              "description": "A vertex identifier that is unique in a graph",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+$"
              },
              "examples": [
                "Seoul",
                "Incpos,9ㅐheon"
              ]
            }
          },
          {
            "name": "updateOrReplaceProperties",
            "in": "query",
            "description": "Effect to properties: * update - updates given key-value properties for a resource  * replace - replaces current properties with the given ones\n",
            "schema": {
              "type": "string",
              "enum": [
                "update",
                "replace"
              ],
              "default": "update"
            }
          },
          {
            "name": "includeProperties",
            "in": "query",
            "description": "Includes the key-value properties in the response when set to true",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "description": "Key-value properties for a given vertex",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Key-value properties for a resource",
                "type": "object",
                "examples": [
                  {
                    "latitude": 37.5326,
                    "longitude": 127.024612
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The vertex created or updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "description": "A vertex identifier that is unique in a graph",
                      "schema": {
                        "type": "string",
                        "pattern": "^[^|_]+$"
                      },
                      "examples": [
                        "Seoul",
                        "Incpos,9ㅐheon"
                      ]
                    },
                    "properties": {
                      "description": "Key-value properties for a resource",
                      "type": "object",
                      "examples": [
                        {
                          "latitude": 37.5326,
                          "longitude": 127.024612
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "propertySyntaxException"
                          ]
                        },
                        "reason": {
                          "type": "string"
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "propertySyntaxException",
                          "reason": "Unexpected trailing token",
                          "status": 400
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidResourceIDException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "the syntax of resource identifier should be one of ^[^|_]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+$, ^[^|_]+_[0-9]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+_[0-9]+$"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidResourceIDException",
                          "reason": "the syntax of resource identifier should be one of ^[^|_]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+$, ^[^|_]+_[0-9]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+_[0-9]+$",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "vertex"
        ],
        "summary": "Retrieves a vertex with a given 'vertexID'",
        "description": "Retrieves a vertex with a given 'vertexID'",
        "parameters": [
          {
            "name": "vertexID",
            "in": "path",
            "required": true,
            "description": "A vertex identifier that is unique in a graph",
            "schema": {
              "description": "A vertex identifier that is unique in a graph",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+$"
              },
              "examples": [
                "Seoul",
                "Incpos,9ㅐheon"
              ]
            }
          },
          {
            "name": "includeProperties",
            "in": "query",
            "description": "Includes the key-value properties in the response when set to true",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The vertex retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "description": "A vertex identifier that is unique in a graph",
                      "schema": {
                        "type": "string",
                        "pattern": "^[^|_]+$"
                      },
                      "examples": [
                        "Seoul",
                        "Incpos,9ㅐheon"
                      ]
                    },
                    "properties": {
                      "description": "Key-value properties for a resource",
                      "type": "object",
                      "examples": [
                        {
                          "latitude": 37.5326,
                          "longitude": 127.024612
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidResourceIDException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "the syntax of resource identifier should be one of ^[^|_]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+$, ^[^|_]+_[0-9]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+_[0-9]+$"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidResourceIDException",
                          "reason": "the syntax of resource identifier should be one of ^[^|_]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+$, ^[^|_]+_[0-9]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+_[0-9]+$",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found in a graph",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resourceNotFoundException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The resource is not found in a graph"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            404
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "resourceNotFoundException",
                          "reason": "The resource is not found in a graph",
                          "status": 404
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "vertex"
        ],
        "summary": "Deletes a vertex with a given 'vertexID'",
        "description": "Deletes a vertex with a given 'vertexID'",
        "parameters": [
          {
            "name": "vertexID",
            "in": "path",
            "required": true,
            "description": "A vertex identifier that is unique in a graph",
            "schema": {
              "description": "A vertex identifier that is unique in a graph",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+$"
              },
              "examples": [
                "Seoul",
                "Incpos,9ㅐheon"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The vertex deleted successfully"
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidResourceIDException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "the syntax of resource identifier should be one of ^[^|_]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+$, ^[^|_]+_[0-9]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+_[0-9]+$"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidResourceIDException",
                          "reason": "the syntax of resource identifier should be one of ^[^|_]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+$, ^[^|_]+_[0-9]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+_[0-9]+$",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found in a graph",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resourceNotFoundException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The resource is not found in a graph"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            404
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "resourceNotFoundException",
                          "reason": "The resource is not found in a graph",
                          "status": 404
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/graph/{edgeID}": {
      "put": {
        "tags": [
          "edge"
        ],
        "summary": "Creates or updates an edge with a given 'edgeID'",
        "description": "Creates or updates an edge with a given 'edgeID'",
        "parameters": [
          {
            "name": "edgeID",
            "in": "path",
            "required": true,
            "description": "An edge identifier that is unique in a graph",
            "schema": {
              "description": "An edge identifier that is unique in a graph",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+\\|[^|_]+\\|[^|_]+$"
              },
              "examples": [
                "Seoul|isConnectedTo|Incheon"
              ]
            }
          },
          {
            "name": "updateOrReplaceProperties",
            "in": "query",
            "description": "Effect to properties: * update - updates given key-value properties for a resource  * replace - replaces current properties with the given ones\n",
            "schema": {
              "type": "string",
              "enum": [
                "update",
                "replace"
              ],
              "default": "update"
            }
          },
          {
            "name": "includeProperties",
            "in": "query",
            "description": "Includes the key-value properties in the response when set to true",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "description": "Key-value properties for a given edge",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Key-value properties for a resource",
                "type": "object",
                "examples": [
                  {
                    "latitude": 37.5326,
                    "longitude": 127.024612
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The edge created or updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "description": "An edge identifier that is unique in a graph",
                      "schema": {
                        "type": "string",
                        "pattern": "^[^|_]+\\|[^|_]+\\|[^|_]+$"
                      },
                      "examples": [
                        "Seoul|isConnectedTo|Incheon"
                      ]
                    },
                    "_o": {
                      "description": "A vertex identifier that is unique in a graph",
                      "schema": {
                        "type": "string",
                        "pattern": "^[^|_]+$"
                      },
                      "examples": [
                        "Seoul",
                        "Incpos,9ㅐheon"
                      ]
                    },
                    "_i": {
                      "description": "A vertex identifier that is unique in a graph",
                      "schema": {
                        "type": "string",
                        "pattern": "^[^|_]+$"
                      },
                      "examples": [
                        "Seoul",
                        "Incpos,9ㅐheon"
                      ]
                    },
                    "_l": {
                      "description": "An edge label",
                      "schema": {
                        "type": "string",
                        "pattern": "^[^|_]+$"
                      },
                      "examples": [
                        "isConnectedTo",
                        "hasFriend"
                      ]
                    },
                    "properties": {
                      "description": "Key-value properties for a resource",
                      "type": "object",
                      "examples": [
                        {
                          "latitude": 37.5326,
                          "longitude": 127.024612
                        }
                      ]
                    }
                  },
                  "examples": [
                    {
                      "_id": "Seoul|isConnectedTo|Incheon",
                      "_o": "Seoul",
                      "_i": "Incheon",
                      "_l": "isConnectedTo",
                      "properties": {
                        "elapsedTime": 3.2
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "propertySyntaxException"
                          ]
                        },
                        "reason": {
                          "type": "string"
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "propertySyntaxException",
                          "reason": "Unexpected trailing token",
                          "status": 400
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidResourceIDException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "the syntax of resource identifier should be one of ^[^|_]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+$, ^[^|_]+_[0-9]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+_[0-9]+$"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidResourceIDException",
                          "reason": "the syntax of resource identifier should be one of ^[^|_]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+$, ^[^|_]+_[0-9]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+_[0-9]+$",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "edge"
        ],
        "summary": "Retrieves an edge with a given 'edgeID'",
        "description": "Retrieves an edge with a given 'edgeID'",
        "parameters": [
          {
            "name": "edgeID",
            "in": "path",
            "required": true,
            "description": "An edge identifier that is unique in a graph",
            "schema": {
              "description": "An edge identifier that is unique in a graph",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+\\|[^|_]+\\|[^|_]+$"
              },
              "examples": [
                "Seoul|isConnectedTo|Incheon"
              ]
            }
          },
          {
            "name": "includeProperties",
            "in": "query",
            "description": "Includes the key-value properties in the response when set to true",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The edge retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "description": "An edge identifier that is unique in a graph",
                      "schema": {
                        "type": "string",
                        "pattern": "^[^|_]+\\|[^|_]+\\|[^|_]+$"
                      },
                      "examples": [
                        "Seoul|isConnectedTo|Incheon"
                      ]
                    },
                    "_o": {
                      "description": "A vertex identifier that is unique in a graph",
                      "schema": {
                        "type": "string",
                        "pattern": "^[^|_]+$"
                      },
                      "examples": [
                        "Seoul",
                        "Incpos,9ㅐheon"
                      ]
                    },
                    "_i": {
                      "description": "A vertex identifier that is unique in a graph",
                      "schema": {
                        "type": "string",
                        "pattern": "^[^|_]+$"
                      },
                      "examples": [
                        "Seoul",
                        "Incpos,9ㅐheon"
                      ]
                    },
                    "_l": {
                      "description": "An edge label",
                      "schema": {
                        "type": "string",
                        "pattern": "^[^|_]+$"
                      },
                      "examples": [
                        "isConnectedTo",
                        "hasFriend"
                      ]
                    },
                    "properties": {
                      "description": "Key-value properties for a resource",
                      "type": "object",
                      "examples": [
                        {
                          "latitude": 37.5326,
                          "longitude": 127.024612
                        }
                      ]
                    }
                  },
                  "examples": [
                    {
                      "_id": "Seoul|isConnectedTo|Incheon",
                      "_o": "Seoul",
                      "_i": "Incheon",
                      "_l": "isConnectedTo",
                      "properties": {
                        "elapsedTime": 3.2
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidResourceIDException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "the syntax of resource identifier should be one of ^[^|_]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+$, ^[^|_]+_[0-9]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+_[0-9]+$"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidResourceIDException",
                          "reason": "the syntax of resource identifier should be one of ^[^|_]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+$, ^[^|_]+_[0-9]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+_[0-9]+$",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found in a graph",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resourceNotFoundException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The resource is not found in a graph"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            404
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "resourceNotFoundException",
                          "reason": "The resource is not found in a graph",
                          "status": 404
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "edge"
        ],
        "summary": "Deletes an edge with a given 'edgeID'",
        "description": "Deletes an edge with a given 'edgeID'",
        "parameters": [
          {
            "name": "edgeID",
            "in": "path",
            "required": true,
            "description": "An edge identifier that is unique in a graph",
            "schema": {
              "description": "An edge identifier that is unique in a graph",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+\\|[^|_]+\\|[^|_]+$"
              },
              "examples": [
                "Seoul|isConnectedTo|Incheon"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The edge deleted successfully"
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidResourceIDException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "the syntax of resource identifier should be one of ^[^|_]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+$, ^[^|_]+_[0-9]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+_[0-9]+$"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidResourceIDException",
                          "reason": "the syntax of resource identifier should be one of ^[^|_]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+$, ^[^|_]+_[0-9]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+_[0-9]+$",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found in a graph",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resourceNotFoundException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The resource is not found in a graph"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            404
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "resourceNotFoundException",
                          "reason": "The resource is not found in a graph",
                          "status": 404
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/graph/{vertexEventID}": {
      "put": {
        "tags": [
          "vertex event"
        ],
        "summary": "Creates or updates a vertex event with a given 'vertexEventID'",
        "description": "Creates or updates a vertex event with a given 'vertexEventID'",
        "parameters": [
          {
            "name": "vertexEventID",
            "in": "path",
            "required": true,
            "description": "A vertex event identifier that is unique in a graph",
            "schema": {
              "description": "A vertex event identifier that is unique in a graph",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+_[+-]?[0-9]+$"
              },
              "examples": [
                "Seoul_1707375682",
                "Incheon_54"
              ]
            }
          },
          {
            "name": "updateOrReplaceProperties",
            "in": "query",
            "description": "Effect to properties: * update - updates given key-value properties for a resource  * replace - replaces current properties with the given ones\n",
            "schema": {
              "type": "string",
              "enum": [
                "update",
                "replace"
              ],
              "default": "update"
            }
          },
          {
            "name": "includeProperties",
            "in": "query",
            "description": "Includes the key-value properties in the response when set to true",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "description": "Key-value properties for a given vertex event",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Key-value properties for a resource",
                "type": "object",
                "examples": [
                  {
                    "latitude": 37.5326,
                    "longitude": 127.024612
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The vertex event created or updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "A vertex valid at a specific time",
                  "properties": {
                    "_id": {
                      "description": "A vertex event identifier that is unique in a graph",
                      "schema": {
                        "type": "string",
                        "pattern": "^[^|_]+_[+-]?[0-9]+$"
                      },
                      "examples": [
                        "Seoul_1707375682",
                        "Incheon_54"
                      ]
                    },
                    "_v": {
                      "description": "A vertex identifier that is unique in a graph",
                      "schema": {
                        "type": "string",
                        "pattern": "^[^|_]+$"
                      },
                      "examples": [
                        "Seoul",
                        "Incpos,9ㅐheon"
                      ]
                    },
                    "_t": {
                      "description": "A time-instant",
                      "schema": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "examples": [
                        1707375682
                      ]
                    },
                    "properties": {
                      "description": "Key-value properties for a resource",
                      "type": "object",
                      "examples": [
                        {
                          "latitude": 37.5326,
                          "longitude": 127.024612
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "propertySyntaxException"
                          ]
                        },
                        "reason": {
                          "type": "string"
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "propertySyntaxException",
                          "reason": "Unexpected trailing token",
                          "status": 400
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidResourceIDException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "the syntax of resource identifier should be one of ^[^|_]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+$, ^[^|_]+_[0-9]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+_[0-9]+$"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidResourceIDException",
                          "reason": "the syntax of resource identifier should be one of ^[^|_]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+$, ^[^|_]+_[0-9]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+_[0-9]+$",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "vertex event"
        ],
        "summary": "Retrieves a vertex event with a given 'vertexEventID'",
        "description": "Retrieves a vertex event with a given 'vertexEventID'",
        "parameters": [
          {
            "name": "vertexEventID",
            "in": "path",
            "required": true,
            "description": "A vertex event identifier that is unique in a graph",
            "schema": {
              "description": "A vertex event identifier that is unique in a graph",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+_[+-]?[0-9]+$"
              },
              "examples": [
                "Seoul_1707375682",
                "Incheon_54"
              ]
            }
          },
          {
            "name": "includeProperties",
            "in": "query",
            "description": "Includes the key-value properties in the response when set to true",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The vertex event retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "A vertex valid at a specific time",
                  "properties": {
                    "_id": {
                      "description": "A vertex event identifier that is unique in a graph",
                      "schema": {
                        "type": "string",
                        "pattern": "^[^|_]+_[+-]?[0-9]+$"
                      },
                      "examples": [
                        "Seoul_1707375682",
                        "Incheon_54"
                      ]
                    },
                    "_v": {
                      "description": "A vertex identifier that is unique in a graph",
                      "schema": {
                        "type": "string",
                        "pattern": "^[^|_]+$"
                      },
                      "examples": [
                        "Seoul",
                        "Incpos,9ㅐheon"
                      ]
                    },
                    "_t": {
                      "description": "A time-instant",
                      "schema": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "examples": [
                        1707375682
                      ]
                    },
                    "properties": {
                      "description": "Key-value properties for a resource",
                      "type": "object",
                      "examples": [
                        {
                          "latitude": 37.5326,
                          "longitude": 127.024612
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidResourceIDException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "the syntax of resource identifier should be one of ^[^|_]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+$, ^[^|_]+_[0-9]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+_[0-9]+$"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidResourceIDException",
                          "reason": "the syntax of resource identifier should be one of ^[^|_]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+$, ^[^|_]+_[0-9]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+_[0-9]+$",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found in a graph",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resourceNotFoundException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The resource is not found in a graph"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            404
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "resourceNotFoundException",
                          "reason": "The resource is not found in a graph",
                          "status": 404
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "vertex event"
        ],
        "summary": "Deletes a vertex event with a given 'vertexEventID'",
        "description": "Deletes a vertex event with a given 'vertexEventID'",
        "parameters": [
          {
            "name": "vertexEventID",
            "in": "path",
            "required": true,
            "description": "A vertex event identifier that is unique in a graph",
            "schema": {
              "description": "A vertex event identifier that is unique in a graph",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+_[+-]?[0-9]+$"
              },
              "examples": [
                "Seoul_1707375682",
                "Incheon_54"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The vertex event deleted successfully"
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidResourceIDException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "the syntax of resource identifier should be one of ^[^|_]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+$, ^[^|_]+_[0-9]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+_[0-9]+$"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidResourceIDException",
                          "reason": "the syntax of resource identifier should be one of ^[^|_]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+$, ^[^|_]+_[0-9]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+_[0-9]+$",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found in a graph",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resourceNotFoundException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The resource is not found in a graph"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            404
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "resourceNotFoundException",
                          "reason": "The resource is not found in a graph",
                          "status": 404
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/graph/{edgeEventID}": {
      "put": {
        "tags": [
          "edge event"
        ],
        "summary": "Creates or updates an edge event with a given 'edgeEventID'",
        "description": "Creates or updates an edge event with a given 'edgeEventID'",
        "parameters": [
          {
            "name": "edgeEventID",
            "in": "path",
            "required": true,
            "description": "An edge event identifier that is unique in a graph",
            "schema": {
              "description": "An edge event identifier that is unique in a graph",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+\\|[^|_]+\\|[^|_]+_[+-]?[0-9]+$"
              },
              "examples": [
                "Seoul|isConnectedTo|Incheon_1707375844"
              ]
            }
          },
          {
            "name": "updateOrReplaceProperties",
            "in": "query",
            "description": "Effect to properties: * update - updates given key-value properties for a resource  * replace - replaces current properties with the given ones\n",
            "schema": {
              "type": "string",
              "enum": [
                "update",
                "replace"
              ],
              "default": "update"
            }
          },
          {
            "name": "includeProperties",
            "in": "query",
            "description": "Includes the key-value properties in the response when set to true",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "description": "Key-value properties for a given edge event",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Key-value properties for a resource",
                "type": "object",
                "examples": [
                  {
                    "latitude": 37.5326,
                    "longitude": 127.024612
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The edge event created or updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An edge valid at a specific time",
                  "properties": {
                    "_id": {
                      "description": "An edge event identifier that is unique in a graph",
                      "schema": {
                        "type": "string",
                        "pattern": "^[^|_]+\\|[^|_]+\\|[^|_]+_[+-]?[0-9]+$"
                      },
                      "examples": [
                        "Seoul|isConnectedTo|Incheon_1707375844"
                      ]
                    },
                    "_e": {
                      "description": "An edge identifier that is unique in a graph",
                      "schema": {
                        "type": "string",
                        "pattern": "^[^|_]+\\|[^|_]+\\|[^|_]+$"
                      },
                      "examples": [
                        "Seoul|isConnectedTo|Incheon"
                      ]
                    },
                    "_o": {
                      "description": "A vertex identifier that is unique in a graph",
                      "schema": {
                        "type": "string",
                        "pattern": "^[^|_]+$"
                      },
                      "examples": [
                        "Seoul",
                        "Incpos,9ㅐheon"
                      ]
                    },
                    "_i": {
                      "description": "A vertex identifier that is unique in a graph",
                      "schema": {
                        "type": "string",
                        "pattern": "^[^|_]+$"
                      },
                      "examples": [
                        "Seoul",
                        "Incpos,9ㅐheon"
                      ]
                    },
                    "_l": {
                      "description": "An edge label",
                      "schema": {
                        "type": "string",
                        "pattern": "^[^|_]+$"
                      },
                      "examples": [
                        "isConnectedTo",
                        "hasFriend"
                      ]
                    },
                    "_t": {
                      "description": "A time-instant",
                      "schema": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "examples": [
                        1707375682
                      ]
                    },
                    "properties": {
                      "description": "Key-value properties for a resource",
                      "type": "object",
                      "examples": [
                        {
                          "latitude": 37.5326,
                          "longitude": 127.024612
                        }
                      ]
                    }
                  },
                  "examples": [
                    {
                      "_id": "Seoul|isConnectedTo|Incheon_1707375682",
                      "_e": "Seoul|isConnectedTo|Incheon",
                      "_o": "Seoul",
                      "_i": "Incheon",
                      "_l": "isConnectedTo",
                      "_t": 1707375682,
                      "properties": {
                        "elapsedTime": 3.2
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "propertySyntaxException"
                          ]
                        },
                        "reason": {
                          "type": "string"
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "propertySyntaxException",
                          "reason": "Unexpected trailing token",
                          "status": 400
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidResourceIDException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "the syntax of resource identifier should be one of ^[^|_]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+$, ^[^|_]+_[0-9]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+_[0-9]+$"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidResourceIDException",
                          "reason": "the syntax of resource identifier should be one of ^[^|_]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+$, ^[^|_]+_[0-9]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+_[0-9]+$",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "edge event"
        ],
        "summary": "Retrieves an edge event with a given 'edgeEventID'",
        "description": "Retrieves an edge event with a given 'edgeEventID'",
        "parameters": [
          {
            "name": "edgeEventID",
            "in": "path",
            "required": true,
            "description": "An edge event identifier that is unique in a graph",
            "schema": {
              "description": "An edge event identifier that is unique in a graph",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+\\|[^|_]+\\|[^|_]+_[+-]?[0-9]+$"
              },
              "examples": [
                "Seoul|isConnectedTo|Incheon_1707375844"
              ]
            }
          },
          {
            "name": "includeProperties",
            "in": "query",
            "description": "Includes the key-value properties in the response when set to true",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The edge event retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An edge valid at a specific time",
                  "properties": {
                    "_id": {
                      "description": "An edge event identifier that is unique in a graph",
                      "schema": {
                        "type": "string",
                        "pattern": "^[^|_]+\\|[^|_]+\\|[^|_]+_[+-]?[0-9]+$"
                      },
                      "examples": [
                        "Seoul|isConnectedTo|Incheon_1707375844"
                      ]
                    },
                    "_e": {
                      "description": "An edge identifier that is unique in a graph",
                      "schema": {
                        "type": "string",
                        "pattern": "^[^|_]+\\|[^|_]+\\|[^|_]+$"
                      },
                      "examples": [
                        "Seoul|isConnectedTo|Incheon"
                      ]
                    },
                    "_o": {
                      "description": "A vertex identifier that is unique in a graph",
                      "schema": {
                        "type": "string",
                        "pattern": "^[^|_]+$"
                      },
                      "examples": [
                        "Seoul",
                        "Incpos,9ㅐheon"
                      ]
                    },
                    "_i": {
                      "description": "A vertex identifier that is unique in a graph",
                      "schema": {
                        "type": "string",
                        "pattern": "^[^|_]+$"
                      },
                      "examples": [
                        "Seoul",
                        "Incpos,9ㅐheon"
                      ]
                    },
                    "_l": {
                      "description": "An edge label",
                      "schema": {
                        "type": "string",
                        "pattern": "^[^|_]+$"
                      },
                      "examples": [
                        "isConnectedTo",
                        "hasFriend"
                      ]
                    },
                    "_t": {
                      "description": "A time-instant",
                      "schema": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "examples": [
                        1707375682
                      ]
                    },
                    "properties": {
                      "description": "Key-value properties for a resource",
                      "type": "object",
                      "examples": [
                        {
                          "latitude": 37.5326,
                          "longitude": 127.024612
                        }
                      ]
                    }
                  },
                  "examples": [
                    {
                      "_id": "Seoul|isConnectedTo|Incheon_1707375682",
                      "_e": "Seoul|isConnectedTo|Incheon",
                      "_o": "Seoul",
                      "_i": "Incheon",
                      "_l": "isConnectedTo",
                      "_t": 1707375682,
                      "properties": {
                        "elapsedTime": 3.2
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidResourceIDException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "the syntax of resource identifier should be one of ^[^|_]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+$, ^[^|_]+_[0-9]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+_[0-9]+$"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidResourceIDException",
                          "reason": "the syntax of resource identifier should be one of ^[^|_]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+$, ^[^|_]+_[0-9]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+_[0-9]+$",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found in a graph",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resourceNotFoundException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The resource is not found in a graph"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            404
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "resourceNotFoundException",
                          "reason": "The resource is not found in a graph",
                          "status": 404
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "edge event"
        ],
        "summary": "Deletes an edge event with a given 'edgeEventID'",
        "description": "Deletes an edge event with a given 'edgeEventID'",
        "parameters": [
          {
            "name": "edgeEventID",
            "in": "path",
            "required": true,
            "description": "An edge event identifier that is unique in a graph",
            "schema": {
              "description": "An edge event identifier that is unique in a graph",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+\\|[^|_]+\\|[^|_]+_[+-]?[0-9]+$"
              },
              "examples": [
                "Seoul|isConnectedTo|Incheon_1707375844"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The edge event deleted successfully"
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidResourceIDException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "the syntax of resource identifier should be one of ^[^|_]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+$, ^[^|_]+_[0-9]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+_[0-9]+$"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidResourceIDException",
                          "reason": "the syntax of resource identifier should be one of ^[^|_]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+$, ^[^|_]+_[0-9]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+_[0-9]+$",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found in a graph",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resourceNotFoundException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The resource is not found in a graph"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            404
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "resourceNotFoundException",
                          "reason": "The resource is not found in a graph",
                          "status": 404
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/graph": {
      "get": {
        "tags": [
          "graph"
        ],
        "summary": "Retrieves vertices or edges in a graph",
        "description": "Retrieves vertices or edges in a graph",
        "parameters": [
          {
            "name": "target",
            "in": "query",
            "description": "Return behavior: * vertices - returns all the vertices  * edges - returns all the edges\n",
            "schema": {
              "type": "string",
              "enum": [
                "vertices",
                "edges"
              ],
              "default": "vertices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The vertices or edges retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "A set of vertex identifiers",
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/VertexID"
                        }
                      },
                      "examples": [
                        [
                          "Seoul",
                          "Incheon"
                        ]
                      ]
                    },
                    {
                      "description": "A set of edge identifiers",
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/EdgeID"
                        }
                      },
                      "examples": [
                        [
                          "Seoul|isConnectedTo|Incheon",
                          "Seoul|isConnectedTo|Daejeon"
                        ]
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "graph"
        ],
        "summary": "Clears a graph",
        "description": "Clears a graph",
        "responses": {
          "204": {
            "description": "A graph cleared successfully"
          }
        }
      }
    },
    "/graph/{vertexID}/outE": {
      "get": {
        "tags": [
          "static traversal"
        ],
        "summary": "Retrieves out-going edges from a vertex with a given 'vertexID'",
        "description": "Retrieves out-going edges from a vertex with a given 'vertexID'",
        "parameters": [
          {
            "name": "vertexID",
            "in": "path",
            "required": true,
            "description": "A vertex identifier that is unique in a graph",
            "schema": {
              "description": "A vertex identifier that is unique in a graph",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+$"
              },
              "examples": [
                "Seoul",
                "Incpos,9ㅐheon"
              ]
            }
          },
          {
            "name": "label[]",
            "in": "query",
            "description": "A (set of) label [filtering]",
            "schema": {
              "type": "array",
              "items": {
                "description": "An edge label",
                "schema": {
                  "type": "string",
                  "pattern": "^[^|_]+$"
                },
                "examples": [
                  "isConnectedTo",
                  "hasFriend"
                ]
              },
              "collectionFormat": "multi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The out-going edges of a vertex retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "A set of edge identifiers",
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/EdgeID"
                        }
                      },
                      "examples": [
                        [
                          "Seoul|isConnectedTo|Incheon",
                          "Seoul|isConnectedTo|Daejeon"
                        ]
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidVertexIDException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The syntax of resource identifier should be ^[^|_]+$"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidVertexIDException",
                          "reason": "the syntax of resource identifier should be ^[^|_]+$",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found in a graph",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resourceNotFoundException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The resource is not found in a graph"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            404
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "resourceNotFoundException",
                          "reason": "The resource is not found in a graph",
                          "status": 404
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/graph/{vertexID}/inE": {
      "get": {
        "tags": [
          "static traversal"
        ],
        "summary": "Retrieves in-going edges from a vertex with a given 'vertexID'",
        "description": "Retrieves in-going edges from a vertex with a given 'vertexID'",
        "parameters": [
          {
            "name": "vertexID",
            "in": "path",
            "required": true,
            "description": "A vertex identifier that is unique in a graph",
            "schema": {
              "description": "A vertex identifier that is unique in a graph",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+$"
              },
              "examples": [
                "Seoul",
                "Incpos,9ㅐheon"
              ]
            }
          },
          {
            "name": "label[]",
            "in": "query",
            "description": "A (set of) label [filtering]",
            "schema": {
              "type": "array",
              "items": {
                "description": "An edge label",
                "schema": {
                  "type": "string",
                  "pattern": "^[^|_]+$"
                },
                "examples": [
                  "isConnectedTo",
                  "hasFriend"
                ]
              },
              "collectionFormat": "multi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The in-going edges of a vertex retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "A set of edge identifiers",
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/EdgeID"
                        }
                      },
                      "examples": [
                        [
                          "Seoul|isConnectedTo|Incheon",
                          "Seoul|isConnectedTo|Daejeon"
                        ]
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidVertexIDException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The syntax of resource identifier should be ^[^|_]+$"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidVertexIDException",
                          "reason": "the syntax of resource identifier should be ^[^|_]+$",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found in a graph",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resourceNotFoundException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The resource is not found in a graph"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            404
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "resourceNotFoundException",
                          "reason": "The resource is not found in a graph",
                          "status": 404
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/graph/{vertexID}/out": {
      "get": {
        "tags": [
          "static traversal"
        ],
        "summary": "Retrieves out-going vertices from a vertex with a given 'vertexID'",
        "description": "Retrieves out-going vertices from a vertex with a given 'vertexID'",
        "parameters": [
          {
            "name": "vertexID",
            "in": "path",
            "required": true,
            "description": "A vertex identifier that is unique in a graph",
            "schema": {
              "description": "A vertex identifier that is unique in a graph",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+$"
              },
              "examples": [
                "Seoul",
                "Incpos,9ㅐheon"
              ]
            }
          },
          {
            "name": "label[]",
            "in": "query",
            "description": "A (set of) label [filtering]",
            "schema": {
              "type": "array",
              "items": {
                "description": "An edge label",
                "schema": {
                  "type": "string",
                  "pattern": "^[^|_]+$"
                },
                "examples": [
                  "isConnectedTo",
                  "hasFriend"
                ]
              },
              "collectionFormat": "multi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The out-going vertices of a vertex retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "A set of vertex identifiers",
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/VertexID"
                        }
                      },
                      "examples": [
                        [
                          "Seoul",
                          "Incheon"
                        ]
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidVertexIDException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The syntax of resource identifier should be ^[^|_]+$"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidVertexIDException",
                          "reason": "the syntax of resource identifier should be ^[^|_]+$",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found in a graph",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resourceNotFoundException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The resource is not found in a graph"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            404
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "resourceNotFoundException",
                          "reason": "The resource is not found in a graph",
                          "status": 404
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/graph/{vertexID}/in": {
      "get": {
        "tags": [
          "static traversal"
        ],
        "summary": "Retrieves in-going vertices from a vertex with a given 'vertexID'",
        "description": "Retrieves in-going vertices from a vertex with a given 'vertexID'",
        "parameters": [
          {
            "name": "vertexID",
            "in": "path",
            "required": true,
            "description": "A vertex identifier that is unique in a graph",
            "schema": {
              "description": "A vertex identifier that is unique in a graph",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+$"
              },
              "examples": [
                "Seoul",
                "Incpos,9ㅐheon"
              ]
            }
          },
          {
            "name": "label[]",
            "in": "query",
            "description": "A (set of) label [filtering]",
            "schema": {
              "type": "array",
              "items": {
                "description": "An edge label",
                "schema": {
                  "type": "string",
                  "pattern": "^[^|_]+$"
                },
                "examples": [
                  "isConnectedTo",
                  "hasFriend"
                ]
              },
              "collectionFormat": "multi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The in-going vertices of a vertex retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "A set of vertex identifiers",
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/VertexID"
                        }
                      },
                      "examples": [
                        [
                          "Seoul",
                          "Incheon"
                        ]
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidVertexIDException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The syntax of resource identifier should be ^[^|_]+$"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidVertexIDException",
                          "reason": "the syntax of resource identifier should be ^[^|_]+$",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found in a graph",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resourceNotFoundException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The resource is not found in a graph"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            404
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "resourceNotFoundException",
                          "reason": "The resource is not found in a graph",
                          "status": 404
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/graph/{vertexEventID}/outEe": {
      "get": {
        "tags": [
          "temporal traversal"
        ],
        "summary": "Retrieves out-going edge events from a vertex event with a given 'vertexEventID'",
        "description": "Retrieves out-going edge events from a vertex event with a given 'vertexEventID'",
        "parameters": [
          {
            "name": "vertexEventID",
            "in": "path",
            "required": true,
            "description": "A vertex event identifier that is unique in a graph",
            "schema": {
              "description": "A vertex event identifier that is unique in a graph",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+_[+-]?[0-9]+$"
              },
              "examples": [
                "Seoul_1707375682",
                "Incheon_54"
              ]
            }
          },
          {
            "name": "label",
            "in": "query",
            "description": "An edge label",
            "required": true,
            "schema": {
              "description": "An edge label",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+$"
              },
              "examples": [
                "isConnectedTo",
                "hasFriend"
              ]
            }
          },
          {
            "name": "temporalRelation",
            "in": "query",
            "description": "An Allen temporal relation",
            "required": true,
            "schema": {
              "description": "An Allen temporal relation related to time-instant",
              "schema": {
                "type": "string",
                "enum": [
                  "isAfter",
                  "isBefore",
                  "cotemporal"
                ]
              },
              "examples": [
                "isAfter",
                "isBefore",
                "cotemporal"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The out-going edge events of a vertex event retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "A set of edge event identifiers",
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/EdgeEventID"
                        }
                      },
                      "examples": [
                        [
                          "Seoul|isConnectedTo|Incheon_1707382874",
                          "Seoul|isConnectedTo|Daejeon_1707382894"
                        ]
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidVertexEventIDException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The syntax of resource identifier should be ^[^|_]+_[0-9]+$"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidVertexEventIDException",
                          "reason": "the syntax of resource identifier should be ^[^|_]+_[0-9]+$",
                          "status": 400
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "missingRequiredURLParameterException"
                          ]
                        },
                        "reason": {
                          "type": "string"
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "missingRequiredURLParameterException",
                          "reason": "required parameters [ temporalRelation, label ] are missed",
                          "status": 400
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidTemporalRelationSyntaxException"
                          ]
                        },
                        "reason": {
                          "type": "string"
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidTemporalRelationSyntaxException",
                          "reason": "temporal relation should be one of 'isAfter', 'isBefore', 'cotemporal'",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found in a graph",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resourceNotFoundException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The resource is not found in a graph"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            404
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "resourceNotFoundException",
                          "reason": "The resource is not found in a graph",
                          "status": 404
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/graph/{vertexEventID}/inEe": {
      "get": {
        "tags": [
          "temporal traversal"
        ],
        "summary": "Retrieves in-going edge events from a vertex event with a given 'vertexEventID'",
        "description": "Retrieves in-going edge events from a vertex event with a given 'vertexEventID'",
        "parameters": [
          {
            "name": "vertexEventID",
            "in": "path",
            "required": true,
            "description": "A vertex event identifier that is unique in a graph",
            "schema": {
              "description": "A vertex event identifier that is unique in a graph",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+_[+-]?[0-9]+$"
              },
              "examples": [
                "Seoul_1707375682",
                "Incheon_54"
              ]
            }
          },
          {
            "name": "label",
            "in": "query",
            "description": "An edge label",
            "required": true,
            "schema": {
              "description": "An edge label",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+$"
              },
              "examples": [
                "isConnectedTo",
                "hasFriend"
              ]
            }
          },
          {
            "name": "temporalRelation",
            "in": "query",
            "description": "An Allen temporal relation",
            "required": true,
            "schema": {
              "description": "An Allen temporal relation related to time-instant",
              "schema": {
                "type": "string",
                "enum": [
                  "isAfter",
                  "isBefore",
                  "cotemporal"
                ]
              },
              "examples": [
                "isAfter",
                "isBefore",
                "cotemporal"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The in-going edge events of a vertex event retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "A set of edge event identifiers",
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/EdgeEventID"
                        }
                      },
                      "examples": [
                        [
                          "Seoul|isConnectedTo|Incheon_1707382874",
                          "Seoul|isConnectedTo|Daejeon_1707382894"
                        ]
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidVertexEventIDException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The syntax of resource identifier should be ^[^|_]+_[0-9]+$"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidVertexEventIDException",
                          "reason": "the syntax of resource identifier should be ^[^|_]+_[0-9]+$",
                          "status": 400
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "missingRequiredURLParameterException"
                          ]
                        },
                        "reason": {
                          "type": "string"
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "missingRequiredURLParameterException",
                          "reason": "required parameters [ temporalRelation, label ] are missed",
                          "status": 400
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidTemporalRelationSyntaxException"
                          ]
                        },
                        "reason": {
                          "type": "string"
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidTemporalRelationSyntaxException",
                          "reason": "temporal relation should be one of 'isAfter', 'isBefore', 'cotemporal'",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found in a graph",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resourceNotFoundException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The resource is not found in a graph"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            404
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "resourceNotFoundException",
                          "reason": "The resource is not found in a graph",
                          "status": 404
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/graph/{vertexEventID}/oute": {
      "get": {
        "tags": [
          "temporal traversal"
        ],
        "summary": "Retrieves out-going vertex events from a vertex event with a given 'vertexEventID'",
        "description": "Retrieves out-going vertex events from a vertex event with a given 'vertexEventID'",
        "parameters": [
          {
            "name": "vertexEventID",
            "in": "path",
            "required": true,
            "description": "A vertex event identifier that is unique in a graph",
            "schema": {
              "description": "A vertex event identifier that is unique in a graph",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+_[+-]?[0-9]+$"
              },
              "examples": [
                "Seoul_1707375682",
                "Incheon_54"
              ]
            }
          },
          {
            "name": "label",
            "in": "query",
            "description": "An edge label",
            "required": true,
            "schema": {
              "description": "An edge label",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+$"
              },
              "examples": [
                "isConnectedTo",
                "hasFriend"
              ]
            }
          },
          {
            "name": "temporalRelation",
            "in": "query",
            "description": "An Allen temporal relation",
            "required": true,
            "schema": {
              "description": "An Allen temporal relation related to time-instant",
              "schema": {
                "type": "string",
                "enum": [
                  "isAfter",
                  "isBefore",
                  "cotemporal"
                ]
              },
              "examples": [
                "isAfter",
                "isBefore",
                "cotemporal"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The out-going vertex events of a vertex event retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "A set of vertex event identifiers",
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/VertexEventID"
                        }
                      },
                      "examples": [
                        [
                          "Seoul_1707382874",
                          "Incheon_1707382894"
                        ]
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidVertexEventIDException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The syntax of resource identifier should be ^[^|_]+_[0-9]+$"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidVertexEventIDException",
                          "reason": "the syntax of resource identifier should be ^[^|_]+_[0-9]+$",
                          "status": 400
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "missingRequiredURLParameterException"
                          ]
                        },
                        "reason": {
                          "type": "string"
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "missingRequiredURLParameterException",
                          "reason": "required parameters [ temporalRelation, label ] are missed",
                          "status": 400
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidTemporalRelationSyntaxException"
                          ]
                        },
                        "reason": {
                          "type": "string"
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidTemporalRelationSyntaxException",
                          "reason": "temporal relation should be one of 'isAfter', 'isBefore', 'cotemporal'",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found in a graph",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resourceNotFoundException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The resource is not found in a graph"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            404
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "resourceNotFoundException",
                          "reason": "The resource is not found in a graph",
                          "status": 404
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/graph/{vertexEventID}/ine": {
      "get": {
        "tags": [
          "temporal traversal"
        ],
        "summary": "Retrieves in-going vertex events from a vertex event with a given 'vertexEventID'",
        "description": "Retrieves in-going vertex events from a vertex event with a given 'vertexEventID'",
        "parameters": [
          {
            "name": "vertexEventID",
            "in": "path",
            "required": true,
            "description": "A vertex event identifier that is unique in a graph",
            "schema": {
              "description": "A vertex event identifier that is unique in a graph",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+_[+-]?[0-9]+$"
              },
              "examples": [
                "Seoul_1707375682",
                "Incheon_54"
              ]
            }
          },
          {
            "name": "label",
            "in": "query",
            "description": "An edge label",
            "required": true,
            "schema": {
              "description": "An edge label",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+$"
              },
              "examples": [
                "isConnectedTo",
                "hasFriend"
              ]
            }
          },
          {
            "name": "temporalRelation",
            "in": "query",
            "description": "An Allen temporal relation",
            "required": true,
            "schema": {
              "description": "An Allen temporal relation related to time-instant",
              "schema": {
                "type": "string",
                "enum": [
                  "isAfter",
                  "isBefore",
                  "cotemporal"
                ]
              },
              "examples": [
                "isAfter",
                "isBefore",
                "cotemporal"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The in-going vertex events of a vertex event retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "A set of vertex event identifiers",
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/VertexEventID"
                        }
                      },
                      "examples": [
                        [
                          "Seoul_1707382874",
                          "Incheon_1707382894"
                        ]
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidVertexEventIDException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The syntax of resource identifier should be ^[^|_]+_[0-9]+$"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidVertexEventIDException",
                          "reason": "the syntax of resource identifier should be ^[^|_]+_[0-9]+$",
                          "status": 400
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "missingRequiredURLParameterException"
                          ]
                        },
                        "reason": {
                          "type": "string"
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "missingRequiredURLParameterException",
                          "reason": "required parameters [ temporalRelation, label ] are missed",
                          "status": 400
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidTemporalRelationSyntaxException"
                          ]
                        },
                        "reason": {
                          "type": "string"
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidTemporalRelationSyntaxException",
                          "reason": "temporal relation should be one of 'isAfter', 'isBefore', 'cotemporal'",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found in a graph",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resourceNotFoundException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The resource is not found in a graph"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            404
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "resourceNotFoundException",
                          "reason": "The resource is not found in a graph",
                          "status": 404
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/graph/{vertexID}/events": {
      "get": {
        "tags": [
          "temporal traversal"
        ],
        "summary": "Retrieves existing vertex events of a vertex with a given 'vertexID'",
        "description": "Retrieves existing vertex events of a vertex with a given 'vertexID'",
        "parameters": [
          {
            "name": "vertexID",
            "in": "path",
            "required": true,
            "schema": {
              "description": "A vertex identifier that is unique in a graph",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+$"
              },
              "examples": [
                "Seoul",
                "Incpos,9ㅐheon"
              ]
            }
          },
          {
            "name": "time",
            "in": "query",
            "schema": {
              "description": "A time-instant",
              "schema": {
                "type": "integer",
                "format": "int64"
              },
              "examples": [
                1707375682
              ]
            }
          },
          {
            "name": "temporalRelation",
            "in": "query",
            "schema": {
              "description": "An Allen temporal relation related to time-instant",
              "schema": {
                "type": "string",
                "enum": [
                  "isAfter",
                  "isBefore",
                  "cotemporal"
                ]
              },
              "examples": [
                "isAfter",
                "isBefore",
                "cotemporal"
              ]
            }
          },
          {
            "name": "awareOutEvents",
            "in": "query",
            "schema": {
              "name": "awareOutEvents",
              "in": "query",
              "description": "Includes vertex events that have out-going edge events from their vertex if set to true",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "name": "awareInEvents",
            "in": "query",
            "schema": {
              "name": "awareInEvents",
              "in": "query",
              "description": "Includes vertex events that have in-going edge events from their vertex if set to true",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the vertex event identifiers retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "A set of vertex event identifiers",
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/VertexEventID"
                        }
                      },
                      "examples": [
                        [
                          "Seoul_1707382874",
                          "Incheon_1707382894"
                        ]
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidVertexIDException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The syntax of resource identifier should be ^[^|_]+$"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidVertexIDException",
                          "reason": "the syntax of resource identifier should be ^[^|_]+$",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found in a graph",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resourceNotFoundException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The resource is not found in a graph"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            404
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "resourceNotFoundException",
                          "reason": "The resource is not found in a graph",
                          "status": 404
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/graph/{edgeID}/events": {
      "get": {
        "tags": [
          "temporal traversal"
        ],
        "summary": "Retrieves existing edge events of a vertex with a given 'vertexID'",
        "description": "Retrieves existing edge events of a vertex with a given 'vertexID'",
        "parameters": [
          {
            "name": "edgeID",
            "in": "path",
            "required": true,
            "schema": {
              "description": "An edge identifier that is unique in a graph",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+\\|[^|_]+\\|[^|_]+$"
              },
              "examples": [
                "Seoul|isConnectedTo|Incheon"
              ]
            }
          },
          {
            "name": "time",
            "in": "query",
            "schema": {
              "description": "A time-instant",
              "schema": {
                "type": "integer",
                "format": "int64"
              },
              "examples": [
                1707375682
              ]
            }
          },
          {
            "name": "temporalRelation",
            "in": "query",
            "schema": {
              "description": "An Allen temporal relation related to time-instant",
              "schema": {
                "type": "string",
                "enum": [
                  "isAfter",
                  "isBefore",
                  "cotemporal"
                ]
              },
              "examples": [
                "isAfter",
                "isBefore",
                "cotemporal"
              ]
            }
          },
          {
            "name": "awareOutEvents",
            "in": "query",
            "schema": {
              "name": "awareOutEvents",
              "in": "query",
              "description": "Includes vertex events that have out-going edge events from their vertex if set to true",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "name": "awareInEvents",
            "in": "query",
            "schema": {
              "name": "awareInEvents",
              "in": "query",
              "description": "Includes vertex events that have in-going edge events from their vertex if set to true",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The edge event identifiers retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "A set of edge event identifiers",
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/EdgeEventID"
                        }
                      },
                      "examples": [
                        [
                          "Seoul|isConnectedTo|Incheon_1707382874",
                          "Seoul|isConnectedTo|Daejeon_1707382894"
                        ]
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidVertexIDException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The syntax of resource identifier should be ^[^|_]+$"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidVertexIDException",
                          "reason": "the syntax of resource identifier should be ^[^|_]+$",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found in a graph",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resourceNotFoundException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The resource is not found in a graph"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            404
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "resourceNotFoundException",
                          "reason": "The resource is not found in a graph",
                          "status": 404
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/graph/{time}/{kairosProgram}/{vertexID}": {
      "put": {
        "tags": [
          "incremental computation"
        ],
        "summary": "Subscribes a source (vertex event) with a Kairos program",
        "description": "Subscribes a source (vertex event) with a Kairos program",
        "parameters": [
          {
            "name": "time",
            "in": "path",
            "required": true,
            "schema": {
              "description": "A time-instant",
              "schema": {
                "type": "integer",
                "format": "int64"
              },
              "examples": [
                1707375682
              ]
            }
          },
          {
            "name": "kairosProgram",
            "in": "path",
            "required": true,
            "schema": {
              "description": "A name of Kairos program",
              "schema": {
                "type": "string"
              },
              "examples": [
                "IsAfterReachability"
              ]
            }
          },
          {
            "name": "vertexID",
            "in": "path",
            "required": true,
            "description": "A vertex identifier that is unique in a graph",
            "schema": {
              "description": "A vertex identifier that is unique in a graph",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+$"
              },
              "examples": [
                "Seoul",
                "Incpos,9ㅐheon"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The vertex event subscribed successfully"
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidVertexIDException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The syntax of resource identifier should be ^[^|_]+$"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidVertexIDException",
                          "reason": "the syntax of resource identifier should be ^[^|_]+$",
                          "status": 400
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidTimeSyntaxException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The value of time should be from -9223372036854775808 to 9223372036854775807"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidTimeSyntaxException",
                          "reason": "the value of time should be from -9223372036854775808 to 9223372036854775807",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found in a graph",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resourceNotFoundException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The resource is not found in a graph"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            404
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "resourceNotFoundException",
                          "reason": "The resource is not found in a graph",
                          "status": 404
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "The source is already subscribed with the program",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "sourceAlreadySubscribedException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The source is already subscribed with the program"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            409
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "sourceAlreadySubscribedException",
                          "reason": "The source is already subscribed with the program",
                          "status": 409
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "incremental computation"
        ],
        "summary": "Unsubscribes a source from a Kairos program",
        "description": "Unsubscribes a source from a Kairos program",
        "parameters": [
          {
            "name": "time",
            "in": "path",
            "required": true,
            "schema": {
              "description": "A time-instant",
              "schema": {
                "type": "integer",
                "format": "int64"
              },
              "examples": [
                1707375682
              ]
            }
          },
          {
            "name": "kairosProgram",
            "in": "path",
            "required": true,
            "schema": {
              "description": "A name of Kairos program",
              "schema": {
                "type": "string"
              },
              "examples": [
                "IsAfterReachability"
              ]
            }
          },
          {
            "name": "vertexID",
            "in": "path",
            "required": true,
            "description": "A vertex identifier that is unique in a graph",
            "schema": {
              "description": "A vertex identifier that is unique in a graph",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+$"
              },
              "examples": [
                "Seoul",
                "Incpos,9ㅐheon"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The vertex event unsubscribed successfully"
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidVertexIDException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The syntax of resource identifier should be ^[^|_]+$"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidVertexIDException",
                          "reason": "the syntax of resource identifier should be ^[^|_]+$",
                          "status": 400
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidTimeSyntaxException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The value of time should be from -9223372036854775808 to 9223372036854775807"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidTimeSyntaxException",
                          "reason": "the value of time should be from -9223372036854775808 to 9223372036854775807",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found in a graph",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resourceNotFoundException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The resource is not found in a graph"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            404
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "resourceNotFoundException",
                          "reason": "The resource is not found in a graph",
                          "status": 404
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/gammaTable": {
      "get": {
        "tags": [
          "incremental computation"
        ],
        "summary": "Retrieves a set of time-instants for gamma tables",
        "description": "Retrieves a set of time-instants for gamma tables",
        "responses": {
          "200": {
            "description": "The set of time-instants retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "A set of time-instants",
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Time"
                        }
                      },
                      "examples": [
                        [
                          1707493276,
                          1707494276
                        ]
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/gammaTable/{time}": {
      "get": {
        "tags": [
          "incremental computation"
        ],
        "summary": "Retrieves a set of Kairos program of gamma tables for a given time",
        "description": "Retrieves a set of Kairos program of gamma tables for a given time",
        "parameters": [
          {
            "name": "time",
            "in": "path",
            "required": true,
            "schema": {
              "description": "A time-instant",
              "schema": {
                "type": "integer",
                "format": "int64"
              },
              "examples": [
                1707375682
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The set of time-instants retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "A set of Kairos programs",
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/KairosProgram"
                        }
                      },
                      "examples": [
                        [
                          "IsAfterReachability"
                        ]
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidTimeSyntaxException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The value of time should be from -9223372036854775808 to 9223372036854775807"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidTimeSyntaxException",
                          "reason": "the value of time should be from -9223372036854775808 to 9223372036854775807",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found in a graph",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resourceNotFoundException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The resource is not found in a graph"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            404
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "resourceNotFoundException",
                          "reason": "The resource is not found in a graph",
                          "status": 404
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/gammaTable/{time}/{kairosProgram}": {
      "get": {
        "tags": [
          "incremental computation"
        ],
        "summary": "Retrieves a gamma table for {time} and {kairosProgram}",
        "description": "Retrieves a gamma table for {time} and {kairosProgram}",
        "parameters": [
          {
            "name": "time",
            "in": "path",
            "required": true,
            "schema": {
              "description": "A time-instant",
              "schema": {
                "type": "integer",
                "format": "int64"
              },
              "examples": [
                1707375682
              ]
            }
          },
          {
            "name": "kairosProgram",
            "in": "path",
            "required": true,
            "schema": {
              "description": "A name of Kairos program",
              "schema": {
                "type": "string"
              },
              "examples": [
                "IsAfterReachability"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Source-gamma pairs for an intermedaite information diffusion result",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "Source-gamma pairs for an intermedaite information diffusion result",
                      "schema": {
                        "type": "object",
                        "properties": {
                          "time": "Time",
                          "program": "KairosProgram",
                          "gammaSources": "vertexIDs"
                        }
                      },
                      "examples": [
                        {
                          "time": 1707375682,
                          "program": "IsAfterReachability",
                          "gammaSources": [
                            "Seoul",
                            "Incheon"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidTimeSyntaxException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The value of time should be from -9223372036854775808 to 9223372036854775807"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidTimeSyntaxException",
                          "reason": "the value of time should be from -9223372036854775808 to 9223372036854775807",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found in a graph",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resourceNotFoundException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The resource is not found in a graph"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            404
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "resourceNotFoundException",
                          "reason": "The resource is not found in a graph",
                          "status": 404
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/gammaTable/{time}/{kairosProgram}/{vertexID}": {
      "get": {
        "tags": [
          "incremental computation"
        ],
        "summary": "Retrieves a gamma for a source vertex in a gamma table for {time} and {kairosProgram}",
        "description": "Retrieves a gamma for a source vertex in a gamma table for {time} and {kairosProgram}",
        "parameters": [
          {
            "name": "time",
            "in": "path",
            "required": true,
            "schema": {
              "description": "A time-instant",
              "schema": {
                "type": "integer",
                "format": "int64"
              },
              "examples": [
                1707375682
              ]
            }
          },
          {
            "name": "kairosProgram",
            "in": "path",
            "required": true,
            "schema": {
              "description": "A name of Kairos program",
              "schema": {
                "type": "string"
              },
              "examples": [
                "IsAfterReachability"
              ]
            }
          },
          {
            "name": "vertexID",
            "in": "path",
            "required": true,
            "description": "A vertex identifier that is unique in a graph",
            "schema": {
              "description": "A vertex identifier that is unique in a graph",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+$"
              },
              "examples": [
                "Seoul",
                "Incpos,9ㅐheon"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Target-value pairs for an intermediate information diffusion result from a source",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "Target-value pairs for an intermediate information diffusion result from a source",
                      "schema": {
                        "type": "object",
                        "properties": {
                          "time": "Time",
                          "source": "VertexID",
                          "program": "KairosProgram",
                          "gamma": "object"
                        }
                      },
                      "examples": [
                        {
                          "time": 1707375682,
                          "source": "Seoul",
                          "program": "IsAfterReachability",
                          "gamma": {
                            "Incheon": 27,
                            "Daejeon": 143
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidVertexIDException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The syntax of resource identifier should be ^[^|_]+$"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidVertexIDException",
                          "reason": "the syntax of resource identifier should be ^[^|_]+$",
                          "status": 400
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidTimeSyntaxException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The value of time should be from -9223372036854775808 to 9223372036854775807"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidTimeSyntaxException",
                          "reason": "the value of time should be from -9223372036854775808 to 9223372036854775807",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found in a graph",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resourceNotFoundException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The resource is not found in a graph"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            404
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "resourceNotFoundException",
                          "reason": "The resource is not found in a graph",
                          "status": 404
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/gammaTable/{time}/{kairosProgram}/{source}/{destination}": {
      "get": {
        "tags": [
          "incremental computation"
        ],
        "summary": "Retrieves a gamma element from a source to a destination in a Gamma Table for {time} and {kairosProgram}",
        "description": "Retrieves a gamma element from a source to a destination in a Gamma Table for {time} and {kairosProgram}",
        "parameters": [
          {
            "name": "time",
            "in": "path",
            "required": true,
            "schema": {
              "description": "A time-instant",
              "schema": {
                "type": "integer",
                "format": "int64"
              },
              "examples": [
                1707375682
              ]
            }
          },
          {
            "name": "kairosProgram",
            "in": "path",
            "required": true,
            "schema": {
              "description": "A name of Kairos program",
              "schema": {
                "type": "string"
              },
              "examples": [
                "IsAfterReachability"
              ]
            }
          },
          {
            "name": "source",
            "in": "path",
            "required": true,
            "description": "A vertex identifier that is unique in a graph",
            "schema": {
              "description": "A vertex identifier that is unique in a graph",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+$"
              },
              "examples": [
                "Seoul",
                "Incpos,9ㅐheon"
              ]
            }
          },
          {
            "name": "destination",
            "in": "path",
            "required": true,
            "description": "A vertex identifier that is unique in a graph",
            "schema": {
              "description": "A vertex identifier that is unique in a graph",
              "schema": {
                "type": "string",
                "pattern": "^[^|_]+$"
              },
              "examples": [
                "Seoul",
                "Incpos,9ㅐheon"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A gamma element from a source to a destination in a Gamma Table for {time} and {kairosProgram}",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "A gamma element from a source to a destination in a Gamma Table for {time} and {kairosProgram}",
                      "schema": {
                        "type": "object",
                        "properties": {
                          "time": "Time",
                          "source": "VertexID",
                          "destination": "VertexID",
                          "program": "KairosProgram",
                          "gammaElement": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              },
                              {
                                "type": "boolean"
                              },
                              {
                                "type": "array"
                              },
                              {
                                "type": "object"
                              }
                            ]
                          }
                        }
                      },
                      "examples": [
                        {
                          "time": 1707375682,
                          "program": "IsAfterReachability",
                          "source": "Seoul",
                          "destination": "Incheon",
                          "gammaElement": 27
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Syntax error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidVertexIDException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The syntax of resource identifier should be ^[^|_]+$"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidVertexIDException",
                          "reason": "the syntax of resource identifier should be ^[^|_]+$",
                          "status": 400
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "invalidTimeSyntaxException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The value of time should be from -9223372036854775808 to 9223372036854775807"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            400
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "invalidTimeSyntaxException",
                          "reason": "the value of time should be from -9223372036854775808 to 9223372036854775807",
                          "status": 400
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found in a graph",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resourceNotFoundException"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "The resource is not found in a graph"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            404
                          ]
                        }
                      },
                      "examples": [
                        {
                          "type": "resourceNotFoundException",
                          "reason": "The resource is not found in a graph",
                          "status": 404
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "VertexID": {
        "description": "A vertex identifier that is unique in a graph",
        "schema": {
          "type": "string",
          "pattern": "^[^|_]+$"
        },
        "examples": [
          "Seoul",
          "Incpos,9ㅐheon"
        ]
      },
      "VertexIDs": {
        "description": "A set of vertex identifiers",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/VertexID"
          }
        },
        "examples": [
          [
            "Seoul",
            "Incheon"
          ]
        ]
      },
      "VertexEventIDs": {
        "description": "A set of vertex event identifiers",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/VertexEventID"
          }
        },
        "examples": [
          [
            "Seoul_1707382874",
            "Incheon_1707382894"
          ]
        ]
      },
      "Label": {
        "description": "An edge label",
        "schema": {
          "type": "string",
          "pattern": "^[^|_]+$"
        },
        "examples": [
          "isConnectedTo",
          "hasFriend"
        ]
      },
      "TemporalRelation": {
        "description": "An Allen temporal relation related to time-instant",
        "schema": {
          "type": "string",
          "enum": [
            "isAfter",
            "isBefore",
            "cotemporal"
          ]
        },
        "examples": [
          "isAfter",
          "isBefore",
          "cotemporal"
        ]
      },
      "EdgeID": {
        "description": "An edge identifier that is unique in a graph",
        "schema": {
          "type": "string",
          "pattern": "^[^|_]+\\|[^|_]+\\|[^|_]+$"
        },
        "examples": [
          "Seoul|isConnectedTo|Incheon"
        ]
      },
      "EdgeIDs": {
        "description": "A set of edge identifiers",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/EdgeID"
          }
        },
        "examples": [
          [
            "Seoul|isConnectedTo|Incheon",
            "Seoul|isConnectedTo|Daejeon"
          ]
        ]
      },
      "EdgeEventIDs": {
        "description": "A set of edge event identifiers",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/EdgeEventID"
          }
        },
        "examples": [
          [
            "Seoul|isConnectedTo|Incheon_1707382874",
            "Seoul|isConnectedTo|Daejeon_1707382894"
          ]
        ]
      },
      "Time": {
        "description": "A time-instant",
        "schema": {
          "type": "integer",
          "format": "int64"
        },
        "examples": [
          1707375682
        ]
      },
      "TimeInstants": {
        "description": "A set of time-instants",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Time"
          }
        },
        "examples": [
          [
            1707493276,
            1707494276
          ]
        ]
      },
      "VertexEventID": {
        "description": "A vertex event identifier that is unique in a graph",
        "schema": {
          "type": "string",
          "pattern": "^[^|_]+_[+-]?[0-9]+$"
        },
        "examples": [
          "Seoul_1707375682",
          "Incheon_54"
        ]
      },
      "EdgeEventID": {
        "description": "An edge event identifier that is unique in a graph",
        "schema": {
          "type": "string",
          "pattern": "^[^|_]+\\|[^|_]+\\|[^|_]+_[+-]?[0-9]+$"
        },
        "examples": [
          "Seoul|isConnectedTo|Incheon_1707375844"
        ]
      },
      "UpdateOrReplaceProperties": {
        "name": "updateOrReplaceProperties",
        "in": "query",
        "description": "Effect to properties: * update - updates given key-value properties for a resource  * replace - replaces current properties with the given ones\n",
        "schema": {
          "type": "string",
          "enum": [
            "update",
            "replace"
          ],
          "default": "update"
        }
      },
      "IncludeProperties": {
        "name": "includeProperties",
        "in": "query",
        "description": "Includes the key-value properties in the response when set to true",
        "schema": {
          "type": "boolean",
          "default": false
        }
      },
      "AwareOutEvents": {
        "name": "awareOutEvents",
        "in": "query",
        "description": "Includes vertex events that have out-going edge events from their vertex if set to true",
        "schema": {
          "type": "boolean",
          "default": false
        }
      },
      "AwareInEvents": {
        "name": "awareInEvents",
        "in": "query",
        "description": "Includes vertex events that have in-going edge events from their vertex if set to true",
        "schema": {
          "type": "boolean",
          "default": false
        }
      },
      "Vertex": {
        "type": "object",
        "properties": {
          "_id": {
            "description": "A vertex identifier that is unique in a graph",
            "schema": {
              "type": "string",
              "pattern": "^[^|_]+$"
            },
            "examples": [
              "Seoul",
              "Incpos,9ㅐheon"
            ]
          },
          "properties": {
            "description": "Key-value properties for a resource",
            "type": "object",
            "examples": [
              {
                "latitude": 37.5326,
                "longitude": 127.024612
              }
            ]
          }
        }
      },
      "VertexEvent": {
        "type": "object",
        "description": "A vertex valid at a specific time",
        "properties": {
          "_id": {
            "description": "A vertex event identifier that is unique in a graph",
            "schema": {
              "type": "string",
              "pattern": "^[^|_]+_[+-]?[0-9]+$"
            },
            "examples": [
              "Seoul_1707375682",
              "Incheon_54"
            ]
          },
          "_v": {
            "description": "A vertex identifier that is unique in a graph",
            "schema": {
              "type": "string",
              "pattern": "^[^|_]+$"
            },
            "examples": [
              "Seoul",
              "Incpos,9ㅐheon"
            ]
          },
          "_t": {
            "description": "A time-instant",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "examples": [
              1707375682
            ]
          },
          "properties": {
            "description": "Key-value properties for a resource",
            "type": "object",
            "examples": [
              {
                "latitude": 37.5326,
                "longitude": 127.024612
              }
            ]
          }
        }
      },
      "Edge": {
        "type": "object",
        "properties": {
          "_id": {
            "description": "An edge identifier that is unique in a graph",
            "schema": {
              "type": "string",
              "pattern": "^[^|_]+\\|[^|_]+\\|[^|_]+$"
            },
            "examples": [
              "Seoul|isConnectedTo|Incheon"
            ]
          },
          "_o": {
            "description": "A vertex identifier that is unique in a graph",
            "schema": {
              "type": "string",
              "pattern": "^[^|_]+$"
            },
            "examples": [
              "Seoul",
              "Incpos,9ㅐheon"
            ]
          },
          "_i": {
            "description": "A vertex identifier that is unique in a graph",
            "schema": {
              "type": "string",
              "pattern": "^[^|_]+$"
            },
            "examples": [
              "Seoul",
              "Incpos,9ㅐheon"
            ]
          },
          "_l": {
            "description": "An edge label",
            "schema": {
              "type": "string",
              "pattern": "^[^|_]+$"
            },
            "examples": [
              "isConnectedTo",
              "hasFriend"
            ]
          },
          "properties": {
            "description": "Key-value properties for a resource",
            "type": "object",
            "examples": [
              {
                "latitude": 37.5326,
                "longitude": 127.024612
              }
            ]
          }
        },
        "examples": [
          {
            "_id": "Seoul|isConnectedTo|Incheon",
            "_o": "Seoul",
            "_i": "Incheon",
            "_l": "isConnectedTo",
            "properties": {
              "elapsedTime": 3.2
            }
          }
        ]
      },
      "EdgeEvent": {
        "type": "object",
        "description": "An edge valid at a specific time",
        "properties": {
          "_id": {
            "description": "An edge event identifier that is unique in a graph",
            "schema": {
              "type": "string",
              "pattern": "^[^|_]+\\|[^|_]+\\|[^|_]+_[+-]?[0-9]+$"
            },
            "examples": [
              "Seoul|isConnectedTo|Incheon_1707375844"
            ]
          },
          "_e": {
            "description": "An edge identifier that is unique in a graph",
            "schema": {
              "type": "string",
              "pattern": "^[^|_]+\\|[^|_]+\\|[^|_]+$"
            },
            "examples": [
              "Seoul|isConnectedTo|Incheon"
            ]
          },
          "_o": {
            "description": "A vertex identifier that is unique in a graph",
            "schema": {
              "type": "string",
              "pattern": "^[^|_]+$"
            },
            "examples": [
              "Seoul",
              "Incpos,9ㅐheon"
            ]
          },
          "_i": {
            "description": "A vertex identifier that is unique in a graph",
            "schema": {
              "type": "string",
              "pattern": "^[^|_]+$"
            },
            "examples": [
              "Seoul",
              "Incpos,9ㅐheon"
            ]
          },
          "_l": {
            "description": "An edge label",
            "schema": {
              "type": "string",
              "pattern": "^[^|_]+$"
            },
            "examples": [
              "isConnectedTo",
              "hasFriend"
            ]
          },
          "_t": {
            "description": "A time-instant",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "examples": [
              1707375682
            ]
          },
          "properties": {
            "description": "Key-value properties for a resource",
            "type": "object",
            "examples": [
              {
                "latitude": 37.5326,
                "longitude": 127.024612
              }
            ]
          }
        },
        "examples": [
          {
            "_id": "Seoul|isConnectedTo|Incheon_1707375682",
            "_e": "Seoul|isConnectedTo|Incheon",
            "_o": "Seoul",
            "_i": "Incheon",
            "_l": "isConnectedTo",
            "_t": 1707375682,
            "properties": {
              "elapsedTime": 3.2
            }
          }
        ]
      },
      "Properties": {
        "description": "Key-value properties for a resource",
        "type": "object",
        "examples": [
          {
            "latitude": 37.5326,
            "longitude": 127.024612
          }
        ]
      },
      "Target": {
        "name": "target",
        "in": "query",
        "description": "Return behavior: * vertices - returns all the vertices  * edges - returns all the edges\n",
        "schema": {
          "type": "string",
          "enum": [
            "vertices",
            "edges"
          ],
          "default": "vertices"
        }
      },
      "KairosProgram": {
        "description": "A name of Kairos program",
        "schema": {
          "type": "string"
        },
        "examples": [
          "IsAfterReachability"
        ]
      },
      "KairosPrograms": {
        "description": "A set of Kairos programs",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/KairosProgram"
          }
        },
        "examples": [
          [
            "IsAfterReachability"
          ]
        ]
      },
      "Gamma": {
        "description": "Target-value pairs for an intermediate information diffusion result from a source",
        "schema": {
          "type": "object",
          "properties": {
            "time": "Time",
            "source": "VertexID",
            "program": "KairosProgram",
            "gamma": "object"
          }
        },
        "examples": [
          {
            "time": 1707375682,
            "source": "Seoul",
            "program": "IsAfterReachability",
            "gamma": {
              "Incheon": 27,
              "Daejeon": 143
            }
          }
        ]
      },
      "GammaElement": {
        "description": "A gamma element from a source to a destination in a Gamma Table for {time} and {kairosProgram}",
        "schema": {
          "type": "object",
          "properties": {
            "time": "Time",
            "source": "VertexID",
            "destination": "VertexID",
            "program": "KairosProgram",
            "gammaElement": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "array"
                },
                {
                  "type": "object"
                }
              ]
            }
          }
        },
        "examples": [
          {
            "time": 1707375682,
            "program": "IsAfterReachability",
            "source": "Seoul",
            "destination": "Incheon",
            "gammaElement": 27
          }
        ]
      },
      "GammaTable": {
        "description": "Source-gamma pairs for an intermedaite information diffusion result",
        "schema": {
          "type": "object",
          "properties": {
            "time": "Time",
            "program": "KairosProgram",
            "gammaSources": "vertexIDs"
          }
        },
        "examples": [
          {
            "time": 1707375682,
            "program": "IsAfterReachability",
            "gammaSources": [
              "Seoul",
              "Incheon"
            ]
          }
        ]
      },
      "PropertySyntaxException": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "propertySyntaxException"
            ]
          },
          "reason": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "enum": [
              400
            ]
          }
        },
        "examples": [
          {
            "type": "propertySyntaxException",
            "reason": "Unexpected trailing token",
            "status": 400
          }
        ]
      },
      "InvalidTemporalRelationSyntaxException": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "invalidTemporalRelationSyntaxException"
            ]
          },
          "reason": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "enum": [
              400
            ]
          }
        },
        "examples": [
          {
            "type": "invalidTemporalRelationSyntaxException",
            "reason": "temporal relation should be one of 'isAfter', 'isBefore', 'cotemporal'",
            "status": 400
          }
        ]
      },
      "ResourceNotFoundException": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "resourceNotFoundException"
            ]
          },
          "reason": {
            "type": "string",
            "enum": [
              "The resource is not found in a graph"
            ]
          },
          "status": {
            "type": "integer",
            "enum": [
              404
            ]
          }
        },
        "examples": [
          {
            "type": "resourceNotFoundException",
            "reason": "The resource is not found in a graph",
            "status": 404
          }
        ]
      },
      "InvalidResourceIDException": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "invalidResourceIDException"
            ]
          },
          "reason": {
            "type": "string",
            "enum": [
              "the syntax of resource identifier should be one of ^[^|_]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+$, ^[^|_]+_[0-9]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+_[0-9]+$"
            ]
          },
          "status": {
            "type": "integer",
            "enum": [
              400
            ]
          }
        },
        "examples": [
          {
            "type": "invalidResourceIDException",
            "reason": "the syntax of resource identifier should be one of ^[^|_]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+$, ^[^|_]+_[0-9]+$, ^[^|_]+\\|[^|_]+\\|[^|_]+_[0-9]+$",
            "status": 400
          }
        ]
      },
      "InvalidVertexIDException": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "invalidVertexIDException"
            ]
          },
          "reason": {
            "type": "string",
            "enum": [
              "The syntax of resource identifier should be ^[^|_]+$"
            ]
          },
          "status": {
            "type": "integer",
            "enum": [
              400
            ]
          }
        },
        "examples": [
          {
            "type": "invalidVertexIDException",
            "reason": "the syntax of resource identifier should be ^[^|_]+$",
            "status": 400
          }
        ]
      },
      "InvalidTimeSyntaxException": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "invalidTimeSyntaxException"
            ]
          },
          "reason": {
            "type": "string",
            "enum": [
              "The value of time should be from -9223372036854775808 to 9223372036854775807"
            ]
          },
          "status": {
            "type": "integer",
            "enum": [
              400
            ]
          }
        },
        "examples": [
          {
            "type": "invalidTimeSyntaxException",
            "reason": "the value of time should be from -9223372036854775808 to 9223372036854775807",
            "status": 400
          }
        ]
      },
      "InvalidVertexEventIDException": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "invalidVertexEventIDException"
            ]
          },
          "reason": {
            "type": "string",
            "enum": [
              "The syntax of resource identifier should be ^[^|_]+_[0-9]+$"
            ]
          },
          "status": {
            "type": "integer",
            "enum": [
              400
            ]
          }
        },
        "examples": [
          {
            "type": "invalidVertexEventIDException",
            "reason": "the syntax of resource identifier should be ^[^|_]+_[0-9]+$",
            "status": 400
          }
        ]
      },
      "MissingRequiredURLParameterException": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "missingRequiredURLParameterException"
            ]
          },
          "reason": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "enum": [
              400
            ]
          }
        },
        "examples": [
          {
            "type": "missingRequiredURLParameterException",
            "reason": "required parameters [ temporalRelation, label ] are missed",
            "status": 400
          }
        ]
      },
      "SourceAlreadySubscribedException": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "sourceAlreadySubscribedException"
            ]
          },
          "reason": {
            "type": "string",
            "enum": [
              "The source is already subscribed with the program"
            ]
          },
          "status": {
            "type": "integer",
            "enum": [
              409
            ]
          }
        },
        "examples": [
          {
            "type": "sourceAlreadySubscribedException",
            "reason": "The source is already subscribed with the program",
            "status": 409
          }
        ]
      }
    }
  }
}
